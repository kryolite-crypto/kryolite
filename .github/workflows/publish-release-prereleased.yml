name: Publish Kryolite

on:
  release:
    types:
      - prereleased

jobs:
  publish:
    runs-on: ${{ matrix.runner }}
    container:
      image: ${{ matrix.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}
    strategy:
      matrix:
        runtime: [linux-x64, linux-arm64, win-x64, osx-x64, osx-arm64]
        include:
          - runtime: linux-x64
            runner: ubuntu-22.04
            image: ghcr.io/kryolite-crypto/kryolite/publish:v1
            zip_type: tar.gz
          - runtime: linux-arm64
            runner: ubuntu-22.04
            image: ghcr.io/kryolite-crypto/kryolite/publish:v1
            cross_compile_opts: -p:SysRoot=/crossrootfs/arm64 -p:LinkerFlavor=lld -p:ObjCopyName=aarch64-linux-gnu-objcopy
            zip_type: tar.gz
          - runtime: win-x64
            runner: windows-2019
            zip_type: zip
          - runtime: osx-x64
            runner: macos-13
            wallet_opts: -t:BundleApp -p:UseAppHost=true
            zip_type: tar.gz
          - runtime: osx-arm64
            runner: macos-13
            wallet_opts: -t:BundleApp -p:UseAppHost=true
            zip_type: tar.gz
    steps:
    - uses: actions/checkout@v3
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.201
    - name: Publish daemon
      run: dotnet publish daemon -c Release -r ${{ matrix.runtime }} -p:PublishDir=../release/kryolite-${{ matrix.runtime }}-${{ github.ref_name }} ${{ matrix.cross_compile_opts }} -p:Version="${{github.ref_name}}" -p:InformationalVersion="${{github.ref_name}}"
    - name: Publish wallet
      run: dotnet publish wallet -c Release -r ${{ matrix.runtime }} -p:PublishDir=../release/kryolite-${{ matrix.runtime }}-${{ github.ref_name }} ${{ matrix.cross_compile_opts }} ${{ matrix.wallet_opts }} -p:Version="${{github.ref_name}}" -p:InformationalVersion="${{github.ref_name}}"
    - name: Publish cli
      run: dotnet publish cli -c Release -r ${{ matrix.runtime }} -p:PublishDir=../release/kryolite-${{ matrix.runtime }}-${{ github.ref_name }} ${{ matrix.cross_compile_opts }} -p:Version="${{github.ref_name}}" -p:InformationalVersion="${{github.ref_name}}"
    - name: Publish miner
      run: dotnet publish miner -c Release -r ${{ matrix.runtime }} -p:PublishDir=../release/kryolite-${{ matrix.runtime }}-${{ github.ref_name }} ${{ matrix.cross_compile_opts }} -p:Version="${{github.ref_name}}" -p:InformationalVersion="${{github.ref_name}}"
    - name: Package
      run: tar --exclude '*.dbg' --exclude '*.pdb' -C release -cavf kryolite-${{ matrix.runtime }}-${{ github.ref_name }}.${{ matrix.zip_type }} kryolite-${{ matrix.runtime }}-${{ github.ref_name }} -p:Version="${{github.ref_name}}" -p:InformationalVersion="${{github.ref_name}}"
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: kryolite-${{ matrix.runtime }}-${{ github.ref_name }}.${{ matrix.zip_type }}