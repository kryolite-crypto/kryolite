name: Publish Kryolite

on:
  release:
    types:
      - prereleased

jobs:
  publish:
    runs-on: ${{ matrix.runner }}
    container:
      image: ${{ matrix.image }}
    strategy:
      matrix:
        # runtime: [linux-x64, win-x64, osx-x64, osx-arm64]
        runtime: [linux-x64, win-x64, osx-x64, osx-arm64]
        project: [cli, miner, daemon, wallet]
        include:
          - runtime: linux-x64
            runner: ubuntu-22.04
            image: ghcr.io/kryolite-crypto/kryolite/publish:latest
            zip_type: tar.gz
          - runtime: linux-arm64
            runner: ubuntu-22.04
            image: ghcr.io/kryolite-crypto/kryolite/publish:latest
            cross_compile_opts: -p:SysRoot=/crossrootfs/arm64 -p:LinkerFlavor=lld -p:ObjCopyName=aarch64-linux-gnu-objcopy
            zip_type: tar.gz
          - runtime: win-x64
            runner: windows-2019
            zip_type: zip
          - runtime: osx-x64
            runner: macos-13
            zip_type: tar.gz
          - runtime: osx-arm64
            runner: macos-13
            zip_type: tar.gz
    steps:
    - uses: actions/checkout@v3
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.2
    - name: Publish
      run: dotnet publish ${{ matrix.project }} -c Release -r ${{ matrix.runtime }} -p:PublishDir=${{ matrix.project }}-${{ matrix.runtime }} ${{ matrix.cross_compile_opts }} 
    - name: Package
      run: tar --exclude .dbg -czvf kryolite-${{ matrix.project }}-${{ matrix.runtime }}-${{ github.ref_name }}.${{ matrix.zip_type }} ${{ matrix.project }}-${{ matrix.runtime }}
    - uses: actions/upload-artifact@v4
      with:
        name: kryolite-${{ matrix.project }}-${{ matrix.runtime }}-${{ github.ref_name }}
        path: kryolite-${{ matrix.project }}-${{ matrix.runtime }}-${{ github.ref_name }}.${{ matrix.zip_type }}